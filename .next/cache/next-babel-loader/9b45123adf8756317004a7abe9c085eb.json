{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\ALPHA\\\\Documents\\\\Currency Tracker\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport \"../styles/main.scss\";\nimport Layout from \"../component/Layout\";\nimport Coins from '../component/Coins';\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Index)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      BTC: {},\n      ETH: {},\n      BCH: {},\n      EOS: {},\n      BSV: {}\n    });\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"getData\",\n    value: function getData() {}\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      try {\n        var API_KEY = '7b4b7ee64c6a29b4dbdcc56679ddbe5113a132ced33f17aa3b8cd5705f0ccf57';\n        fetch(\"https://min-api.cryptocompare.com/data/pricemultifull?fsyms=BTC,ETH,BCH,EDS,BSV&tsyms=USD,EUR&api_key=\".concat(API_KEY)).then(function (res) {\n          res.json();\n        }).then(function (data) {\n          return console.log(data);\n        });\n        this.setState({\n          BTC: data.DISPLAY.BTC,\n          ETH: data.DISPLAY.ETH,\n          BCH: data.DISPLAY.BCH,\n          EOS: data.DISPLAY.EOS,\n          BSV: data.DISPLAY.BSV\n        });\n        {\n          console.log(this.state.BTC.USD.PRICE);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          BTC = _this$state.BTC,\n          ETH = _this$state.ETH,\n          BCH = _this$state.BCH,\n          EOS = _this$state.EOS,\n          BSV = _this$state.BSV;\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(Coins, {\n        BTC: BTC,\n        ETH: ETH,\n        BCH: BCH,\n        EOS: EOS,\n        BSV: BSV,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/ALPHA/Documents/Currency Tracker/pages/index.js"],"names":["Layout","Coins","Index","BTC","ETH","BCH","EOS","BSV","API_KEY","fetch","then","res","json","data","console","log","setState","DISPLAY","state","USD","PRICE","error","React","Component"],"mappings":";;;;;;;;;;AAAA,OAAO,qBAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;IACMC,K;;;;;;;;;;;;;;;;;;4DACI;AACFC,MAAAA,GAAG,EAAE,EADH;AAIFC,MAAAA,GAAG,EAAE,EAJH;AAOFC,MAAAA,GAAG,EAAE,EAPH;AAUFC,MAAAA,GAAG,EAAE,EAVH;AAaFC,MAAAA,GAAG,EAAE;AAbH,K;;;;;;;8BAiBI,CAET;;;wCACkB;AACf,UAAG;AACC,YAAMC,OAAO,GAAE,kEAAf;AACAC,QAAAA,KAAK,iHAA0GD,OAA1G,EAAL,CACCE,IADD,CACM,UAAAC,GAAG,EAAI;AACTA,UAAAA,GAAG,CAACC,IAAJ;AACH,SAHD,EAICF,IAJD,CAIM,UAAAG,IAAI;AAAA,iBAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAJ;AAAA,SAJV;AAKA,aAAKG,QAAL,CAAc;AACVb,UAAAA,GAAG,EAAEU,IAAI,CAACI,OAAL,CAAad,GADR;AAEVC,UAAAA,GAAG,EAAES,IAAI,CAACI,OAAL,CAAab,GAFR;AAGVC,UAAAA,GAAG,EAAEQ,IAAI,CAACI,OAAL,CAAaZ,GAHR;AAIVC,UAAAA,GAAG,EAAEO,IAAI,CAACI,OAAL,CAAaX,GAJR;AAKVC,UAAAA,GAAG,EAAEM,IAAI,CAACI,OAAL,CAAaV;AALR,SAAd;AAOA;AAACO,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAL,CAAWf,GAAX,CAAegB,GAAf,CAAmBC,KAA/B;AAAsC;AAC1C,OAfD,CAgBA,OAAMC,KAAN,EAAY;AACRP,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH;AACR;;;6BACW;AAAA,wBACgC,KAAKH,KADrC;AAAA,UACIf,GADJ,eACIA,GADJ;AAAA,UACSC,GADT,eACSA,GADT;AAAA,UACcC,GADd,eACcA,GADd;AAAA,UACmBC,GADnB,eACmBA,GADnB;AAAA,UACwBC,GADxB,eACwBA,GADxB;AAEJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,KAAD;AAAO,QAAA,GAAG,EAAEJ,GAAZ;AAAiB,QAAA,GAAG,EAAEC,GAAtB;AAA2B,QAAA,GAAG,EAAEC,GAAhC;AAAqC,QAAA,GAAG,EAAEC,GAA1C;AAA+C,QAAA,GAAG,EAAEC,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ;AAOH;;;;EAnDee,KAAK,CAACC,S;;AAsD1B,eAAerB,KAAf","sourcesContent":["import \"../styles/main.scss\";\r\nimport Layout from \"../component/Layout\";\r\nimport Coins from '../component/Coins';\r\nclass Index extends React.Component{\r\n    state={\r\n        BTC: {\r\n        \r\n        },\r\n        ETH: {\r\n\r\n        },\r\n        BCH: {\r\n\r\n        },\r\n        EOS: {\r\n\r\n        },\r\n        BSV: {\r\n\r\n        }\r\n    }\r\n     getData(){\r\n        \r\n    }\r\n    componentDidMount(){\r\n        try{\r\n            const API_KEY= '7b4b7ee64c6a29b4dbdcc56679ddbe5113a132ced33f17aa3b8cd5705f0ccf57';\r\n            fetch(`https://min-api.cryptocompare.com/data/pricemultifull?fsyms=BTC,ETH,BCH,EDS,BSV&tsyms=USD,EUR&api_key=${API_KEY}`)\r\n            .then(res => {\r\n                res.json();\r\n            })\r\n            .then(data => console.log(data));\r\n            this.setState({\r\n                BTC: data.DISPLAY.BTC,\r\n                ETH: data.DISPLAY.ETH,\r\n                BCH: data.DISPLAY.BCH,\r\n                EOS: data.DISPLAY.EOS,\r\n                BSV: data.DISPLAY.BSV\r\n            });\r\n            {console.log(this.state.BTC.USD.PRICE)}\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n}\r\n    render(){\r\n        const { BTC, ETH, BCH, EOS, BSV } = this.state;\r\n        return(\r\n            <div>\r\n                <Layout>\r\n                    <Coins BTC={BTC} ETH={ETH} BCH={BCH} EOS={EOS} BSV={BSV} />\r\n                </Layout>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}