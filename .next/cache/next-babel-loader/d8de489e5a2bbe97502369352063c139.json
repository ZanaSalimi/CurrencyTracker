{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALPHA\\\\Documents\\\\Currency Tracker\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"../styles/main.scss\";\nimport Layout from \"../component/Layout\";\nimport Coins from '../component/Coins';\n\nclass Index extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      BTC: [],\n      ETH: [],\n      BCH: [],\n      EOS: [],\n      BSV: []\n    });\n  }\n\n  getData() {}\n\n  componentDidMount() {\n    try {\n      const API_KEY = '7b4b7ee64c6a29b4dbdcc56679ddbe5113a132ced33f17aa3b8cd5705f0ccf57';\n      fetch(`https://min-api.cryptocompare.com/data/pricemultifull?fsyms=BTC,ETH,BCH,EDS,BSV&tsyms=USD,EUR&api_key=${API_KEY}`).then(res => {\n        res.json();\n      }).then(data => console.log(data));\n      this.setState({\n        BTC: data.DISPLAY.BTC,\n        ETH: data.DISPLAY.ETH,\n        BCH: data.DISPLAY.BCH,\n        EOS: data.DISPLAY.EOS,\n        BSV: data.DISPLAY.BSV\n      });\n      {\n        console.log(this.state.BTC.USD.PRICE);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const {\n      BTC,\n      ETH,\n      BCH,\n      EOS,\n      BSV\n    } = this.state;\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(Coins, {\n      BTC: BTC,\n      ETH: ETH,\n      BCH: BCH,\n      EOS: EOS,\n      BSV: BSV,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/ALPHA/Documents/Currency Tracker/pages/index.js"],"names":["Layout","Coins","Index","React","Component","BTC","ETH","BCH","EOS","BSV","getData","componentDidMount","API_KEY","fetch","then","res","json","data","console","log","setState","DISPLAY","state","USD","PRICE","error","render"],"mappings":";;;;;;AAAA,OAAO,qBAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AACA,MAAMC,KAAN,SAAoBC,KAAK,CAACC,SAA1B,CAAmC;AAAA;AAAA;;AAAA,mCACzB;AACFC,MAAAA,GAAG,EAAE,EADH;AAIFC,MAAAA,GAAG,EAAE,EAJH;AAOFC,MAAAA,GAAG,EAAE,EAPH;AAUFC,MAAAA,GAAG,EAAE,EAVH;AAaFC,MAAAA,GAAG,EAAE;AAbH,KADyB;AAAA;;AAkB9BC,EAAAA,OAAO,GAAE,CAET;;AACDC,EAAAA,iBAAiB,GAAE;AACf,QAAG;AACC,YAAMC,OAAO,GAAE,kEAAf;AACAC,MAAAA,KAAK,CAAE,yGAAwGD,OAAQ,EAAlH,CAAL,CACCE,IADD,CACMC,GAAG,IAAI;AACTA,QAAAA,GAAG,CAACC,IAAJ;AACH,OAHD,EAICF,IAJD,CAIMG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAJd;AAKA,WAAKG,QAAL,CAAc;AACVf,QAAAA,GAAG,EAAEY,IAAI,CAACI,OAAL,CAAahB,GADR;AAEVC,QAAAA,GAAG,EAAEW,IAAI,CAACI,OAAL,CAAaf,GAFR;AAGVC,QAAAA,GAAG,EAAEU,IAAI,CAACI,OAAL,CAAad,GAHR;AAIVC,QAAAA,GAAG,EAAES,IAAI,CAACI,OAAL,CAAab,GAJR;AAKVC,QAAAA,GAAG,EAAEQ,IAAI,CAACI,OAAL,CAAaZ;AALR,OAAd;AAOA;AAACS,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAL,CAAWjB,GAAX,CAAekB,GAAf,CAAmBC,KAA/B;AAAsC;AAC1C,KAfD,CAgBA,OAAMC,KAAN,EAAY;AACRP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH;AACR;;AACGC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAErB,MAAAA,GAAF;AAAOC,MAAAA,GAAP;AAAYC,MAAAA,GAAZ;AAAiBC,MAAAA,GAAjB;AAAsBC,MAAAA;AAAtB,QAA8B,KAAKa,KAAzC;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,KAAD;AAAO,MAAA,GAAG,EAAEjB,GAAZ;AAAiB,MAAA,GAAG,EAAEC,GAAtB;AAA2B,MAAA,GAAG,EAAEC,GAAhC;AAAqC,MAAA,GAAG,EAAEC,GAA1C;AAA+C,MAAA,GAAG,EAAEC,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAOH;;AAnD8B;;AAsDnC,eAAeP,KAAf","sourcesContent":["import \"../styles/main.scss\";\r\nimport Layout from \"../component/Layout\";\r\nimport Coins from '../component/Coins';\r\nclass Index extends React.Component{\r\n    state={\r\n        BTC: [\r\n\r\n        ],\r\n        ETH: [\r\n\r\n        ],\r\n        BCH: [\r\n\r\n        ],\r\n        EOS: [\r\n\r\n        ],\r\n        BSV: [\r\n\r\n        ]\r\n    }\r\n     getData(){\r\n        \r\n    }\r\n    componentDidMount(){\r\n        try{\r\n            const API_KEY= '7b4b7ee64c6a29b4dbdcc56679ddbe5113a132ced33f17aa3b8cd5705f0ccf57';\r\n            fetch(`https://min-api.cryptocompare.com/data/pricemultifull?fsyms=BTC,ETH,BCH,EDS,BSV&tsyms=USD,EUR&api_key=${API_KEY}`)\r\n            .then(res => {\r\n                res.json();\r\n            })\r\n            .then(data => console.log(data));\r\n            this.setState({\r\n                BTC: data.DISPLAY.BTC,\r\n                ETH: data.DISPLAY.ETH,\r\n                BCH: data.DISPLAY.BCH,\r\n                EOS: data.DISPLAY.EOS,\r\n                BSV: data.DISPLAY.BSV\r\n            });\r\n            {console.log(this.state.BTC.USD.PRICE)}\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n}\r\n    render(){\r\n        const { BTC, ETH, BCH, EOS, BSV } = this.state;\r\n        return(\r\n            <div>\r\n                <Layout>\r\n                    <Coins BTC={BTC} ETH={ETH} BCH={BCH} EOS={EOS} BSV={BSV} />\r\n                </Layout>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}