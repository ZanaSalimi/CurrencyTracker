{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\ALPHA\\\\Documents\\\\Currency Tracker\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport \"../styles/main.scss\";\nimport Layout from \"../component/Layout\";\nimport Coins from '../component/Coins';\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Index)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      coin: [],\n      loading: false\n    });\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"getData\",\n    value: function getData() {}\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var API_KEY, res, data;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.setState({\n                loading: true\n              });\n              API_KEY = '7b4b7ee64c6a29b4dbdcc56679ddbe5113a132ced33f17aa3b8cd5705f0ccf57';\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(\"https://min-api.cryptocompare.com/data/pricemultifull?fsyms=BTC,ETH,BCH,EDS,BSV&tsyms=USD,EUR&api_key=\".concat(API_KEY)));\n\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 7:\n              data = _context.sent;\n              this.setState({\n                coin: data,\n                loading: false\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) {\n        return console.log('Loading..');\n      } else {\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, console.log(this.state.coin), __jsx(Layout, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, __jsx(Coins, {\n          BTC: BTC,\n          ETH: ETH,\n          BCH: BCH,\n          EOS: EOS,\n          BSV: BSV,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        })));\n      }\n\n      var _this$state = this.state,\n          BTC = _this$state.BTC,\n          ETH = _this$state.ETH,\n          BCH = _this$state.BCH,\n          EOS = _this$state.EOS,\n          BSV = _this$state.BSV;\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/ALPHA/Documents/Currency Tracker/pages/index.js"],"names":["Layout","Coins","Index","coin","loading","setState","API_KEY","fetch","res","json","data","state","console","log","BTC","ETH","BCH","EOS","BSV","React","Component"],"mappings":";;;;;;;;;;;AAAA,OAAO,qBAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;IACMC,K;;;;;;;;;;;;;;;;;;4DACI;AACFC,MAAAA,IAAI,EAAC,EADH;AAEFC,MAAAA,OAAO,EAAE;AAFP,K;;;;;;;8BAII,CAET;;;;;;;;;AAEO,mBAAKC,QAAL,CAAc;AAACD,gBAAAA,OAAO,EAAE;AAAV,eAAd;AACME,cAAAA,O,GAAS,kE;;+CACGC,KAAK,iHAA0GD,OAA1G,E;;;AAAjBE,cAAAA,G;;+CACaA,GAAG,CAACC,IAAJ,E;;;AAAbC,cAAAA,I;AACN,mBAAKL,QAAL,CAAc;AACVF,gBAAAA,IAAI,EAAEO,IADI;AAEVN,gBAAAA,OAAO,EAAE;AAFC,eAAd;;;;;;;;;;;6BAKA;AACJ,UAAG,KAAKO,KAAL,CAAWP,OAAd,EAAsB;AACnB,eAAOQ,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAP;AACF,OAFD,MAGI;AACA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKD,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWR,IAAvB,CADL,EAEI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,KAAD;AAAO,UAAA,GAAG,EAAEW,GAAZ;AAAiB,UAAA,GAAG,EAAEC,GAAtB;AAA2B,UAAA,GAAG,EAAEC,GAAhC;AAAqC,UAAA,GAAG,EAAEC,GAA1C;AAA+C,UAAA,GAAG,EAAEC,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAFJ,CADJ;AAQH;;AAbG,wBAcgC,KAAKP,KAdrC;AAAA,UAcIG,GAdJ,eAcIA,GAdJ;AAAA,UAcSC,GAdT,eAcSA,GAdT;AAAA,UAccC,GAdd,eAccA,GAdd;AAAA,UAcmBC,GAdnB,eAcmBA,GAdnB;AAAA,UAcwBC,GAdxB,eAcwBA,GAdxB;AAgBP;;;;EAlCeC,KAAK,CAACC,S;;AAqC1B,eAAelB,KAAf","sourcesContent":["import \"../styles/main.scss\";\r\nimport Layout from \"../component/Layout\";\r\nimport Coins from '../component/Coins';\r\nclass Index extends React.Component{\r\n    state={\r\n        coin:[],\r\n        loading: false\r\n    }\r\n     getData(){\r\n        \r\n    }\r\n    async componentDidMount(){\r\n            this.setState({loading: true});\r\n            const API_KEY= '7b4b7ee64c6a29b4dbdcc56679ddbe5113a132ced33f17aa3b8cd5705f0ccf57';\r\n            const res = await fetch(`https://min-api.cryptocompare.com/data/pricemultifull?fsyms=BTC,ETH,BCH,EDS,BSV&tsyms=USD,EUR&api_key=${API_KEY}`);\r\n            const data = await res.json();\r\n            this.setState({\r\n                coin: data,\r\n                loading: false\r\n            });\r\n}\r\n    render(){\r\n        if(this.state.loading){\r\n           return console.log('Loading..')\r\n        }\r\n        else{\r\n            return(\r\n                <div>\r\n                    {console.log(this.state.coin)}\r\n                    <Layout>\r\n                        <Coins BTC={BTC} ETH={ETH} BCH={BCH} EOS={EOS} BSV={BSV} />\r\n                    </Layout>\r\n                </div>\r\n            )\r\n        }\r\n        const { BTC, ETH, BCH, EOS, BSV } = this.state;\r\n        \r\n    }\r\n\r\n}\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}